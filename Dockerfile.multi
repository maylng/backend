# Build stage - Use specific version instead of latest
FROM golang:1.21.5-alpine3.19 AS builder

# Create non-root user for build
RUN addgroup -g 1001 -S appgroup && \
    adduser -u 1001 -S appuser -G appgroup

WORKDIR /app

# Install build dependencies and security updates
RUN apk add --no-cache git && \
    apk upgrade --no-cache

# Copy go mod files
COPY go.mod go.sum ./

# Download dependencies
RUN go mod download && go mod verify

# Copy source code
COPY . .

# Build both the API and worker applications
RUN CGO_ENABLED=0 GOOS=linux go build \
    -a -installsuffix cgo \
    -ldflags='-w -s -extldflags "-static"' \
    -o api ./cmd/api && \
    CGO_ENABLED=0 GOOS=linux go build \
    -a -installsuffix cgo \
    -ldflags='-w -s -extldflags "-static"' \
    -o worker ./cmd/worker

# Create entrypoint script
RUN echo '#!/bin/sh' > entrypoint.sh && \
    echo 'case "$1" in' >> entrypoint.sh && \
    echo '  "worker")' >> entrypoint.sh && \
    echo '    exec /app/worker' >> entrypoint.sh && \
    echo '    ;;' >> entrypoint.sh && \
    echo '  "migrate")' >> entrypoint.sh && \
    echo '    # Add migration logic here if needed' >> entrypoint.sh && \
    echo '    echo "Migration completed"' >> entrypoint.sh && \
    echo '    ;;' >> entrypoint.sh && \
    echo '  "--health-check")' >> entrypoint.sh && \
    echo '    exec /app/api --health-check' >> entrypoint.sh && \
    echo '    ;;' >> entrypoint.sh && \
    echo '  *)' >> entrypoint.sh && \
    echo '    exec /app/api "$@"' >> entrypoint.sh && \
    echo '    ;;' >> entrypoint.sh && \
    echo 'esac' >> entrypoint.sh && \
    chmod +x entrypoint.sh

# Final stage - Use specific distroless image for better security
FROM gcr.io/distroless/static-debian11:nonroot

WORKDIR /app

# Copy the binaries and entrypoint from builder stage
COPY --from=builder --chown=nonroot:nonroot /app/api .
COPY --from=builder --chown=nonroot:nonroot /app/worker .
COPY --from=builder --chown=nonroot:nonroot /app/entrypoint.sh .

# Copy migrations
COPY --from=builder --chown=nonroot:nonroot /app/migrations ./migrations

# Expose port (mainly for API)
EXPOSE 8080

# Add health check for API
HEALTHCHECK --interval=30s --timeout=3s --start-period=5s --retries=3 \
    CMD ["/app/api", "--health-check"] || exit 1

# Use entrypoint script to handle different commands
ENTRYPOINT ["/app/entrypoint.sh"]
